Search.setIndex({"docnames": ["_autodoc/armed", "_autodoc/armed.callbacks", "_autodoc/armed.crossvalidation", "_autodoc/armed.models", "_autodoc/modules", "_autosummary/armed", "_autosummary/armed.callbacks", "_autosummary/armed.callbacks.aec_callbacks", "_autosummary/armed.callbacks.segmentation", "_autosummary/armed.crossvalidation", "_autosummary/armed.crossvalidation.grouped_cv", "_autosummary/armed.crossvalidation.splitting", "_autosummary/armed.metrics", "_autosummary/armed.misc", "_autosummary/armed.models", "_autosummary/armed.models.autoencoder_classifier", "_autosummary/armed.models.cnn_classifier", "_autosummary/armed.models.lme", "_autosummary/armed.models.metalearning", "_autosummary/armed.models.mlp_classifiers", "_autosummary/armed.models.random_effects", "_autosummary/armed.settings", "_autosummary/armed.tfutils", "adni", "api", "applications", "index", "license", "mci_conversion", "melanoma", "setup", "synthetic_dataset"], "filenames": ["_autodoc/armed.rst", "_autodoc/armed.callbacks.rst", "_autodoc/armed.crossvalidation.rst", "_autodoc/armed.models.rst", "_autodoc/modules.rst", "_autosummary/armed.rst", "_autosummary/armed.callbacks.rst", "_autosummary/armed.callbacks.aec_callbacks.rst", "_autosummary/armed.callbacks.segmentation.rst", "_autosummary/armed.crossvalidation.rst", "_autosummary/armed.crossvalidation.grouped_cv.rst", "_autosummary/armed.crossvalidation.splitting.rst", "_autosummary/armed.metrics.rst", "_autosummary/armed.misc.rst", "_autosummary/armed.models.rst", "_autosummary/armed.models.autoencoder_classifier.rst", "_autosummary/armed.models.cnn_classifier.rst", "_autosummary/armed.models.lme.rst", "_autosummary/armed.models.metalearning.rst", "_autosummary/armed.models.mlp_classifiers.rst", "_autosummary/armed.models.random_effects.rst", "_autosummary/armed.settings.rst", "_autosummary/armed.tfutils.rst", "adni.rst", "api.rst", "applications.rst", "index.rst", "license.rst", "mci_conversion.rst", "melanoma.rst", "setup.rst", "synthetic_dataset.rst"], "titles": ["armed package", "armed.callbacks package", "armed.crossvalidation package", "armed.models package", "armed", "armed", "armed.callbacks", "armed.callbacks.aec_callbacks", "armed.callbacks.segmentation", "armed.crossvalidation", "armed.crossvalidation.grouped_cv", "armed.crossvalidation.splitting", "armed.metrics", "armed.misc", "armed.models", "armed.models.autoencoder_classifier", "armed.models.cnn_classifier", "armed.models.lme", "armed.models.metalearning", "armed.models.mlp_classifiers", "armed.models.random_effects", "armed.settings", "armed.tfutils", "Alzheimer\u2019s Disease diagnosis from T1-weighted MRI", "API Reference", "Applications", "Adversarially-regularized mixed effects deep learning (ARMED)", "License", "Classification of stable vs. progressive mild cognitive impairment (MCI)", "Live cell image compression and classification", "Setup", "Synthetic datasets"], "terms": {"callback": [0, 4], "aec_callback": [0, 4], "compute_image_metr": [0, 1], "make_compute_latents_callback": [0, 1], "make_image_metrics_callback": [0, 1], "make_recon_figure_callback": [0, 1], "segment": [0, 4], "saveimagescallback": [0, 1], "on_epoch_end": [0, 1], "savemultimodalimagescallback": [0, 1], "crossvalid": [0, 4], "grouped_cv": [0, 4], "stratifiedgroupkfold": [0, 2], "stratifiedgroupshufflesplit": [0, 2], "split": [0, 4, 10, 23], "basickfoldutil": [0, 2], "create_fold": [0, 2], "get_fold": [0, 2], "nestedkfoldutil": [0, 2], "model": [0, 1, 4, 8, 12, 26, 31], "autoencoder_classifi": [0, 4], "adversarialclassifi": [0, 3], "call": [0, 1, 2, 3, 29], "get_config": [0, 3], "auxclassifi": [0, 3], "baseautoencoderclassifi": [0, 3], "decod": [0, 3], "domainadversarialaec": [0, 3], "compil": [0, 3], "test_step": [0, 3], "train_step": [0, 3], "domainenhancingautoencoderclassifi": [0, 3], "encod": [0, 1, 2, 3, 23, 29], "imageclassifi": [0, 3], "latentclassifi": [0, 3], "mixedeffectauxclassifi": [0, 3], "mixedeffectsaec": [0, 3], "randomeffectdecod": [0, 3], "randomeffectencod": [0, 3], "tiedconv2dtranspos": [0, 3], "build": [0, 2, 3, 23, 26, 29], "tieddecod": [0, 3], "load_weights_base_aec": [0, 3], "cnn_classifi": [0, 4], "clusterinputimageclassifi": [0, 3], "domainadversarialimageclassifi": [0, 3], "mixedeffectsclassifi": [0, 3], "randomeffectsclassifi": [0, 3], "lme": [0, 4], "logisticglm": [0, 3], "fit": [0, 3, 27], "predict": [0, 3, 23, 29], "mixedlogisticglm": [0, 3], "metalearn": [0, 4], "mldg": [0, 3], "mlp_classifi": [0, 4], "adversari": [0, 3, 15, 16, 28], "basemlp": [0, 3], "clustercovariatemlp": [0, 3], "domainadversarialmlp": [0, 3], "mlpactiv": [0, 3], "mixedeffectsmlp": [0, 3], "mixedeffectsmlpnonlinearslop": [0, 3], "randomeffectslinearslopeintercept": [0, 3], "random_effect": [0, 4], "clusterscalebiasblock": [0, 3], "gammarandomeffect": [0, 3], "namedvariablelay": [0, 3], "randomeffect": [0, 3], "make_deterministic_posterior_fn": [0, 3], "make_fixed_prior_fn": [0, 3], "make_gamma_prior_fn": [0, 3], "make_posterior_fn": [0, 3], "make_trainable_prior_fn": [0, 3], "custom": [0, 1, 2, 6, 7, 8, 9, 10, 12], "balanced_accuraci": [0, 4], "y_true": 0, "y_pred": 0, "balanc": [0, 2], "accuraci": 0, "multi": [0, 29], "class": [0, 1, 2, 3, 8, 10, 11, 15, 16, 17, 19, 20, 29], "label": [0, 2, 3, 29], "comput": [0, 1, 29], "mean": [0, 23, 29], "each": [0, 2, 3, 23, 28, 29, 31], "paramet": [0, 1, 2, 3, 23, 31], "tf": [0, 1, 3], "tensor": 0, "true": [0, 2], "probabilist": [0, 29], "Will": 0, "threshold": 0, "0": [0, 1, 2, 3], "5": [0, 2], "return": [0, 1, 2, 3], "type": [0, 1, 2, 3, 23, 29], "classification_metr": [0, 4], "numpi": [0, 1, 2, 3, 23], "ndarrai": [0, 2, 3], "youden_point": 0, "float": [0, 2, 3], "none": [0, 1, 2, 3], "fixed_sen": 0, "8": [0, 1, 2], "fixed_spec": 0, "sever": [0, 29], "classif": [0, 2, 3, 19, 23, 25, 26], "auroc": [0, 3], "At": [0, 23, 29], "youden": 0, "point": [0, 31], "": [0, 2, 3, 25, 26, 27, 28], "index": [0, 1, 26], "f1": 0, "ppv": 0, "npv": 0, "sensit": 0, "specif": [0, 1, 2, 23, 27, 28, 29], "fix": [0, 3, 23, 29], "np": [0, 1, 2, 3], "option": [0, 1, 2, 3, 31], "predetermin": 0, "e": [0, 29], "g": 0, "base": [0, 1, 2, 3, 23, 29], "train": [0, 2, 3, 18, 23], "data": [0, 1, 2, 3, 11, 26, 27, 31], "default": [0, 1, 2, 3, 29], "thi": [0, 2, 3, 23, 27, 28, 29, 30, 31], "dictionari": 0, "dict": [0, 2, 3], "compute_youden_point": [0, 4], "where": [0, 2, 23, 30], "1": [0, 1, 2, 3, 26], "i": [0, 2, 3, 23, 27, 28, 29, 30, 31], "maxim": 0, "maximum": 0, "image_metr": [0, 4], "img": 0, "imag": [0, 1, 3, 23, 25, 26], "includ": [0, 1, 2, 3, 15, 16, 23, 27, 29], "bright": [0, 1], "contrast": [0, 1], "sharp": [0, 1], "snr": [0, 1], "sensitivity_at_specif": [0, 4], "single_sample_dic": [0, 4], "dice": 0, "score": 0, "specificity_at_sensit": [0, 4], "miscellan": [0, 13], "util": [0, 13, 22], "expand": [0, 13, 29], "path": [0, 1, 3, 13, 23, 29, 30], "get": [0, 2, 13, 23], "datestamp": [0, 13], "etc": [0, 13], "expand_data_path": [0, 4], "str": [0, 1, 3], "make": [0, 2], "bool": [0, 1, 2, 3], "fals": [0, 1, 2, 3], "concaten": [0, 3, 23], "datadir": [0, 29, 30], "py": [0, 23, 28, 29], "directori": [0, 30], "doe": 0, "exist": 0, "expand_results_path": [0, 4], "resultsdir": [0, 29, 30], "get_datestamp": [0, 4], "with_tim": 0, "timestamp": 0, "format": 0, "yyyi": 0, "mm": 0, "dd": 0, "hh": 0, "ss": 0, "make_random_onehot": [0, 4], "n_row": 0, "int": [0, 1, 2, 3], "n_col": 0, "creat": [0, 1, 2, 10, 29, 30], "random": [0, 1, 2, 3, 20, 23, 29, 31], "one": [0, 1, 3, 23, 29], "hot": [0, 1, 3, 23, 29], "matrix": [0, 1, 3, 23], "number": [0, 1, 2, 23], "row": 0, "column": [0, 3], "arrai": [0, 1, 2], "tensorflow": [0, 3, 22], "session": [0, 22], "set_gpu": [0, 4], "gpu": 0, "mem_frac": 0, "assign": 0, "limit": [0, 27], "memori": [0, 29], "usag": 0, "autoencod": [1, 3, 7, 15, 29], "classifi": [1, 3, 7, 15, 16, 23, 29, 31], "epoch": [1, 3, 29], "data_in": 1, "metadata": 1, "panda": [1, 3, 29], "datafram": [1, 3, 29], "output_dir": [1, 29], "output_idx": 1, "metric": [1, 3, 4], "also": [1, 29], "histogram": 1, "compar": [1, 28], "distribut": [1, 2, 27], "across": [1, 2, 23, 29], "cluster": [1, 3, 26, 31], "kera": [1, 3, 8], "tupl": [1, 2], "input": [1, 3, 29], "pd": [1, 3], "output": [1, 2, 3, 23, 29], "locat": [1, 29, 30], "contain": [1, 3, 23, 29], "descript": 1, "image_metadata": 1, "gener": [1, 2, 3, 23, 26, 29, 31], "function": [1, 2, 3, 7, 12, 13, 15, 18, 20, 22, 31], "some": [1, 23, 28, 29], "latent": [1, 3, 23, 29], "represent": [1, 29], "save": [1, 3, 23, 29], "them": [1, 3], "pkl": [1, 29], "file": [1, 23, 29, 30], "The": [1, 2, 3, 23, 27, 29], "davi": 1, "bouldin": 1, "calinski": 1, "harabasz": 1, "log": 1, "result": [1, 2, 23, 29, 30], "should": [1, 2, 23, 30], "us": [1, 2, 3, 23, 27, 29, 30], "lambdacallback": 1, "from": [1, 2, 3, 9, 25, 26, 27, 28, 29], "object": [1, 2, 3], "batch": [1, 2, 3, 23], "x": [1, 2, 3, 23, 29], "h": [1, 26], "w": 1, "tabl": [1, 28], "mixedeffect": [1, 23, 29], "produc": [1, 23], "figur": [1, 23], "exampl": [1, 2, 23, 26, 29], "reconstruct": [1, 3, 29], "without": [1, 27], "effect": [1, 3, 15, 16, 17, 20, 28, 31], "design": [1, 3, 23], "need": [1, 29], "n_cluster": 1, "recon": [1, 3], "o": 1, "current": [1, 8], "unus": [1, 8], "arg": [1, 2, 3], "ani": [1, 2, 3, 27, 30], "kwarg": [1, 2, 3], "scikit": [2, 10], "learn": [2, 3, 10, 18, 23, 29, 31], "kfold": [2, 10], "group": [2, 10], "AND": [2, 10, 27], "stratifi": [2, 10, 28], "hermidalc": [2, 10], "http": [2, 3, 10], "github": [2, 10], "com": [2, 10], "issu": [2, 10], "13621": [2, 10], "issuecom": [2, 10], "656094573": [2, 10], "12": [2, 10], "28": [2, 10], "2020": [2, 10], "_basekfold": 2, "k": [2, 11, 26], "fold": [2, 11], "iter": 2, "variant": 2, "non": [2, 26], "overlap": 2, "cross": [2, 9, 11, 23], "valid": [2, 9, 11, 23, 29], "variat": [2, 3, 15, 23], "stratifiedkfold": 2, "ar": [2, 3, 23, 27, 29, 30, 31], "made": 2, "preserv": 2, "percentag": 2, "sampl": [2, 3, 23, 29, 31], "same": [2, 3, 23, 29], "appear": 2, "two": [2, 23, 31], "differ": [2, 23], "distinct": 2, "ha": [2, 3], "least": 2, "equal": 2, "between": [2, 23], "groupkfold": 2, "former": 2, "attempt": 2, "approxim": 2, "wherea": 2, "which": [2, 3, 23, 29, 30], "read": [2, 29, 30], "more": [2, 31], "user": 2, "guid": 2, "n_split": 2, "must": [2, 3, 27, 31], "2": [2, 3], "shuffl": 2, "whether": [2, 27, 29], "befor": [2, 3, 23], "note": [2, 29], "within": [2, 28], "random_st": 2, "randomst": 2, "instanc": 2, "when": [2, 3, 29, 30], "affect": 2, "order": 2, "indic": 2, "control": [2, 31], "otherwis": [2, 27], "leav": 2, "pass": [2, 23], "an": [2, 3, 23, 29], "reproduc": [2, 27], "multipl": 2, "see": [2, 23, 29, 30, 31], "glossari": 2, "import": [2, 28], "sklearn": [2, 9], "model_select": 2, "ones": 2, "17": 2, "y": [2, 3, 23, 29], "3": [2, 29], "4": [2, 3, 29], "6": 2, "7": [2, 3, 23, 26, 29], "cv": 2, "train_idx": 2, "test_idx": 2, "print": 2, "test": [2, 3, 23, 29], "take": [2, 3, 23, 29], "inform": [2, 23, 28], "account": 2, "retain": [2, 27], "binari": [2, 3, 27], "multiclass": 2, "task": [2, 3, 23, 29], "stratifiedshufflesplit": 2, "groupshufflesplit": 2, "provid": [2, 26, 27, 29], "accord": 2, "third": 2, "parti": [2, 27], "can": [2, 29, 30, 31], "arbitrari": 2, "domain": [2, 3, 15, 16, 18, 28], "stratif": 2, "integ": 2, "merg": 2, "like": 2, "strategi": 2, "do": 2, "guarante": 2, "all": [2, 27, 29], "although": 2, "still": [2, 3], "veri": 2, "sizeabl": 2, "dataset": [2, 23, 25, 26, 28, 29, 30], "param": 2, "re": 2, "test_siz": 2, "If": [2, 29, 30], "repres": 2, "proport": 2, "round": 2, "up": [2, 3], "absolut": 2, "valu": 2, "set": [2, 4, 29, 30], "complement": 2, "size": [2, 3], "By": 2, "train_siz": 2, "automat": [2, 29], "seed": 2, "shape": 2, "15": 2, "sgss": 2, "43": 2, "get_n_split": 2, "out": [2, 27], "shufflesplit": 2, "n_sampl": 2, "n_featur": 2, "featur": [2, 3, 23, 28, 29], "suffici": 2, "henc": 2, "zero": [2, 23, 29], "mai": [2, 27], "placehold": 2, "instead": 2, "actual": 2, "target": 2, "variabl": [2, 29, 31], "supervis": 2, "problem": 2, "done": [2, 30], "while": [2, 3, 29], "yield": 2, "splitter": 2, "you": 2, "ident": 2, "hold": [2, 11], "z": [2, 3, 23, 29], "n_fold": 2, "kfold_class": 2, "list": [2, 27], "store": [2, 30], "x_train": 2, "z_train": 2, "y_train": 2, "x_val": 2, "z_val": 2, "y_val": 2, "idx": 2, "given": [2, 3, 29], "n_folds_out": 2, "n_folds_inn": 2, "outer": [2, 3], "inner": [2, 3], "idx_out": 2, "idx_inn": 2, "tool": [2, 9], "deriv": [2, 9, 27, 29], "those": [2, 9], "mix": [3, 15, 16, 17, 28, 31], "layer": [3, 20, 23, 29], "loss_recon": 3, "loss": [3, 27], "meansquarederror": 3, "loss_class": 3, "binarycrossentropi": 3, "loss_adv": 3, "categoricalcrossentropi": 3, "metric_class": 3, "auc": 3, "metric_adv": 3, "categoricalaccuraci": 3, "opt_autoencod": 3, "optim": 3, "adam": 3, "opt_adversari": 3, "loss_recon_weight": 3, "loss_class_weight": 3, "01": 3, "loss_gen_weight": 3, "05": 3, "main": [3, 23, 29], "phenotyp": [3, 29], "auxiliari": 3, "name": [3, 27], "acc": 3, "lr": 3, "0001": 3, "weight": [3, 25, 26, 29], "properti": 3, "loss_clust": 3, "loss_latent_cluster_weight": 3, "001": 3, "loss_image_cluster_weight": 3, "under": 3, "develop": 3, "opt_recon_classifi": 3, "loss_recon_fe_weight": 3, "loss_recon_cluster_weight": 3, "conv2dtranspos": 3, "input_shap": 3, "weights_path": 3, "load": [3, 29], "nativ": 3, "load_weight": 3, "fail": 3, "match": 3, "workaround": 3, "manual": 3, "simpl": [3, 16, 19], "2d": [3, 16, 23, 29], "cnn": [3, 16], "extens": [3, 16, 30], "receiv": 3, "activ": [3, 23], "membership": [3, 23], "addit": 3, "flatten": 3, "last": 3, "convolut": [3, 23, 29], "first": 3, "dens": [3, 23], "return_layer_activ": 3, "compet": 3, "loss_classifi": 3, "loss_adversari": 3, "loss_classifier_weight": 3, "metric_classifi": 3, "opt_classifi": 3, "nadam": 3, "block": [3, 23, 29], "final": [3, 23], "linear": 3, "slope": 3, "intercept": 3, "introduc": 3, "logist": [3, 17], "regress": [3, 17], "built": [3, 17], "statsmodel": [3, 17], "formula": 3, "rais": 3, "userwarn": 3, "been": 3, "re_dict": 3, "cluster_nam": 3, "appli": [3, 23, 29], "seen": [3, 29], "dure": [3, 23, 29], "meta": [3, 18], "wrapper": [3, 18], "convent": [3, 18, 28, 31], "agnost": [3, 18, 29], "outer_lr": 3, "inner_lr": 3, "40": 3, "cluster_batch_s": 3, "loss_fn": 3, "categorical_crossentropi": 3, "meta_test_weight": 3, "verbos": 3, "implement": 3, "li": 3, "2018": 3, "arxiv": 3, "org": 3, "ab": 3, "1710": 3, "03463": 3, "rate": 3, "durat": 3, "per": 3, "gradient": 3, "step": 3, "rel": [3, 29], "neural": [3, 19, 23, 26, 28, 29, 31], "network": [3, 19, 23, 26, 28, 29, 31], "basic": [3, 23], "mlp": 3, "site": [3, 23, 28, 29], "opt_main": 3, "select": [3, 23, 29], "total_loss": 3, "curv": 3, "pr": 3, "auprc": 3, "metric_class_m": 3, "metric_class_f": 3, "loss_class_me_weight": 3, "loss_class_fe_weight": 3, "loss_class_m": 3, "loss_class_f": 3, "both": 3, "auprc_f": 3, "core": [3, 20], "bayesian": [3, 20], "variablelay": 3, "densevari": 3, "prior_scal": 3, "post_loc_init_scal": 3, "post_scale_init_min": 3, "post_scale_init_rang": 3, "packag": 4, "subpackag": 4, "submodul": 4, "modul": [4, 5, 6, 9, 14, 26], "content": 4, "misc": 4, "tfutil": 4, "In": 23, "applic": [23, 26, 28, 29], "arm": [23, 30], "we": [23, 29], "individu": 23, "cognit": [23, 25, 26], "normal": [23, 29], "structur": 23, "acquir": 23, "coron": 23, "slice": 23, "through": 23, "right": [23, 27], "hippocampu": 23, "sourc": [23, 27, 28], "adni2": 23, "adni3": 23, "incorpor": 23, "captur": 23, "studi": 23, "scanner": 23, "manufactur": 23, "acquisit": 23, "select_images_dx": 23, "ipynb": [23, 28, 31], "perform": [23, 26, 28], "curat": [23, 28], "good": [23, 27], "qualiti": 23, "It": [23, 29], "csv": [23, 29], "smri_input_fil": 23, "dllabpipelin": 23, "pipelin": 23, "run": [23, 26, 28, 29], "config_adni23_smri": 23, "ini": 23, "previous": 23, "hippocamp": 23, "preproc_extract_hippo_slic": 23, "extract": 23, "png": [23, 29], "partit": 23, "heldout": [23, 29], "png_to_numpy_data_split": 23, "further": 23, "analys": 23, "mont": 23, "carlo": 23, "npz": [23, 29], "remain": [23, 29], "reserv": [23, 27], "evalu": [23, 29], "unseen": 23, "script": 23, "command": 23, "line": 23, "argument": [23, 29], "For": [23, 29], "python": [23, 29, 30], "model_typ": [23, 29], "data_dir": 23, "help": [23, 29], "section": 23, "below": [23, 27, 29], "gradcam_comparison": 23, "gradcam": 23, "visual": [23, 30], "infer_z_unseen_sit": 23, "infer": 23, "allow": 23, "me": 23, "its": [23, 27], "text": [23, 29], "hat": [23, 29], "_f": [23, 29], "_m": [23, 29], "beta": [23, 29], "subnetwork": [23, 29], "h_f": 23, "penultim": 23, "newlin": [23, 29], "clasifi": [23, 29], "u": [23, 29], "regular": [23, 29], "prior": [23, 27, 29], "h_r": 23, "A": [23, 26, 27, 29, 30], "classic": [23, 29, 31], "prelu": 23, "max": 23, "pool": 23, "blue": [23, 29], "area": [23, 29], "diagram": [23, 29], "abov": [23, 27, 29], "clusterinput": 23, "naiv": 23, "approach": 23, "add": [23, 28, 29, 30], "grai": [23, 29], "tri": [23, 29], "time": [23, 29], "increas": [23, 29], "crossentropi": [23, 29], "minim": 23, "associ": [23, 29], "upon": [23, 29], "orang": [23, 29], "ad": [23, 29], "scalar": [23, 29], "bia": [23, 29], "These": 23, "sigmoid": 23, "synthet": [25, 26, 28], "stabl": [25, 26], "v": [25, 26], "progress": [25, 26, 29], "mild": [25, 26], "impair": [25, 26], "mci": [25, 26], "alzheim": [25, 26], "diseas": [25, 26], "diagnosi": [25, 26], "t1": [25, 26], "mri": [25, 26], "live": [25, 26], "cell": [25, 26], "compress": [25, 26], "framework": 26, "iid": 26, "report": 26, "our": 26, "paper": 26, "p": 26, "nguyen": 26, "treacher": 26, "montillo": 26, "improv": 26, "interpret": 26, "ieee": 26, "transact": 26, "pattern": 26, "analysi": 26, "machin": 26, "intellig": 26, "vol": 26, "45": 26, "pp": 26, "8081": 26, "8093": 26, "juli": 26, "2023": [26, 27], "doi": 26, "10": 26, "1109": 26, "tpami": 26, "3234291": 26, "setup": 26, "depend": 26, "api": 26, "refer": 26, "licens": 26, "copyright": 27, "c": 27, "univers": 27, "texa": 27, "southwestern": 27, "medic": 27, "center": 27, "redistribut": 27, "form": 27, "modif": 27, "permit": 27, "academ": 27, "research": 27, "onli": 27, "subject": 27, "disclaim": 27, "follow": 27, "condit": 27, "met": 27, "code": [27, 30], "notic": 27, "document": 27, "other": 27, "materi": 27, "neither": 27, "holder": 27, "nor": 27, "contributor": 27, "endors": 27, "promot": 27, "product": 27, "softwar": 27, "written": 27, "permiss": 27, "OR": 27, "OF": 27, "FOR": 27, "commerci": 27, "purpos": 27, "IN": 27, "WITH": 27, "expressli": 27, "prohibit": 27, "BY": 27, "profit": 27, "entiti": 27, "shall": 27, "compris": 27, "NO": 27, "express": 27, "impli": 27, "TO": 27, "patent": 27, "grant": 27, "accompani": 27, "THE": 27, "AS": 27, "warranti": 27, "BUT": 27, "NOT": 27, "merchant": 27, "particular": 27, "event": 27, "BE": 27, "liabl": 27, "direct": 27, "indirect": 27, "incident": 27, "special": 27, "exemplari": 27, "consequenti": 27, "damag": 27, "procur": 27, "substitut": 27, "servic": 27, "busi": 27, "interrupt": 27, "howev": 27, "caus": 27, "ON": 27, "theori": 27, "liabil": 27, "contract": 27, "strict": 27, "tort": 27, "neglig": 27, "aris": 27, "wai": 27, "ITS": 27, "even": 27, "IF": 27, "advis": 27, "possibl": 27, "SUCH": 27, "variou": 28, "defin": 28, "convers": 28, "dementia": 28, "24": 28, "month": 28, "wa": 28, "adni": 28, "adnimerg": 28, "preprocess": 28, "pre": 28, "create_kfold": 28, "divid": [28, 29, 31], "10x10": 28, "univariate_analys": 28, "tradit": 28, "statist": 28, "measur": 28, "influenc": 28, "model_comparison": 28, "model_comparison_probe_featur": 28, "confound": [28, 31], "abil": 28, "separ": 28, "truli": 28, "known": 28, "term": 28, "medl": 29, "vector": 29, "melanoma": 29, "patient": 29, "xenograft": 29, "pdx": 29, "were": 29, "danus": 29, "lab": 29, "high": 29, "metastat": 29, "effici": 29, "low": 29, "experiment": [29, 30], "observ": 29, "came": 29, "dai": 29, "create_dataset": 29, "date": 29, "inclus": 29, "unfortun": 29, "disk": 29, "speed": 29, "too": 29, "slow": 29, "stream": 29, "imagedatagener": 29, "desir": 29, "explicit": 29, "enforc": 29, "enhanc": 29, "emphas": 29, "combin": 29, "compon": 29, "work": 29, "training_metadata": 29, "data_train": 29, "training_data": 29, "val_metadata": 29, "data_v": 29, "val_data": 29, "preset": 29, "global": [29, 30], "thei": 29, "next": 29, "do_test": 29, "test_metadata": 29, "data_test": 29, "test_data": 29, "load_weights_epoch": 29, "similarli": 29, "data_unseen": 29, "To": 29, "obtain": 29, "model_tool": 29, "image_data": 29, "data_": 29, "image_list": 29, "h5": 29, "outputpath": 29, "npy": 29, "fulli": 29, "infer_design_matrix": 29, "sinc": 29, "softmax": 29, "similar": 29, "e_f": 29, "_a": 29, "e_r": 29, "_r": 29, "_l": 29, "_i": 29, "correspond": 29, "mirror": 29, "conda_environ": 30, "yml": 30, "new": 30, "environ": 30, "conda": 30, "env": 30, "f": 30, "prefix": 30, "edit": 30, "download": 30, "simul": [30, 31], "repositori": [30, 31], "root": [30, 31], "pythonpath": [30, 31], "studio": 30, "modifi": 30, "interact": 30, "ensur": 31, "your": 31, "environment": 31, "dimension": 31, "nonlinear": 31, "benchmark": 31, "along": 31, "vari": 31, "radiu": 31, "synthetic_dataset": 31, "spiral_classif": 31, "comparison": 31, "degre": 31}, "objects": {"": [[5, 0, 0, "-", "armed"]], "armed": [[6, 0, 0, "-", "callbacks"], [9, 0, 0, "-", "crossvalidation"], [12, 0, 0, "-", "metrics"], [13, 0, 0, "-", "misc"], [14, 0, 0, "-", "models"], [21, 0, 0, "-", "settings"], [22, 0, 0, "-", "tfutils"]], "armed.callbacks": [[7, 0, 0, "-", "aec_callbacks"], [8, 0, 0, "-", "segmentation"]], "armed.callbacks.aec_callbacks": [[1, 1, 1, "", "compute_image_metrics"], [1, 1, 1, "", "make_compute_latents_callback"], [1, 1, 1, "", "make_image_metrics_callback"], [1, 1, 1, "", "make_recon_figure_callback"]], "armed.callbacks.segmentation": [[1, 2, 1, "", "SaveImagesCallback"], [1, 2, 1, "", "SaveMultiModalImagesCallback"]], "armed.callbacks.segmentation.SaveImagesCallback": [[1, 3, 1, "", "on_epoch_end"]], "armed.callbacks.segmentation.SaveMultiModalImagesCallback": [[1, 3, 1, "", "on_epoch_end"]], "armed.crossvalidation": [[10, 0, 0, "-", "grouped_cv"], [11, 0, 0, "-", "splitting"]], "armed.crossvalidation.grouped_cv": [[2, 2, 1, "", "StratifiedGroupKFold"], [2, 2, 1, "", "StratifiedGroupShuffleSplit"]], "armed.crossvalidation.grouped_cv.StratifiedGroupShuffleSplit": [[2, 3, 1, "", "split"]], "armed.crossvalidation.splitting": [[2, 2, 1, "", "BasicKFoldUtil"], [2, 2, 1, "", "NestedKFoldUtil"]], "armed.crossvalidation.splitting.BasicKFoldUtil": [[2, 3, 1, "", "create_folds"], [2, 3, 1, "", "get_fold"]], "armed.crossvalidation.splitting.NestedKFoldUtil": [[2, 3, 1, "", "create_folds"], [2, 3, 1, "", "get_fold"]], "armed.metrics": [[0, 1, 1, "", "balanced_accuracy"], [0, 1, 1, "", "classification_metrics"], [0, 1, 1, "", "compute_youden_point"], [0, 1, 1, "", "image_metrics"], [0, 1, 1, "", "sensitivity_at_specificity"], [0, 1, 1, "", "single_sample_dice"], [0, 1, 1, "", "specificity_at_sensitivity"]], "armed.misc": [[0, 1, 1, "", "expand_data_path"], [0, 1, 1, "", "expand_results_path"], [0, 1, 1, "", "get_datestamp"], [0, 1, 1, "", "make_random_onehot"]], "armed.models": [[15, 0, 0, "-", "autoencoder_classifier"], [16, 0, 0, "-", "cnn_classifier"], [17, 0, 0, "-", "lme"], [18, 0, 0, "-", "metalearning"], [19, 0, 0, "-", "mlp_classifiers"], [20, 0, 0, "-", "random_effects"]], "armed.models.autoencoder_classifier": [[3, 2, 1, "", "AdversarialClassifier"], [3, 2, 1, "", "AuxClassifier"], [3, 2, 1, "", "BaseAutoencoderClassifier"], [3, 2, 1, "", "Decoder"], [3, 2, 1, "", "DomainAdversarialAEC"], [3, 2, 1, "", "DomainEnhancingAutoencoderClassifier"], [3, 2, 1, "", "Encoder"], [3, 2, 1, "", "ImageClassifier"], [3, 2, 1, "", "LatentClassifier"], [3, 2, 1, "", "MixedEffectAuxClassifier"], [3, 2, 1, "", "MixedEffectsAEC"], [3, 2, 1, "", "RandomEffectDecoder"], [3, 2, 1, "", "RandomEffectEncoder"], [3, 2, 1, "", "TiedConv2DTranspose"], [3, 2, 1, "", "TiedDecoder"], [3, 1, 1, "", "load_weights_base_aec"]], "armed.models.autoencoder_classifier.AdversarialClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.AuxClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.BaseAutoencoderClassifier": [[3, 3, 1, "", "call"]], "armed.models.autoencoder_classifier.Decoder": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.DomainAdversarialAEC": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.autoencoder_classifier.Encoder": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.ImageClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.LatentClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.MixedEffectAuxClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.autoencoder_classifier.MixedEffectsAEC": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.autoencoder_classifier.RandomEffectDecoder": [[3, 3, 1, "", "call"]], "armed.models.autoencoder_classifier.RandomEffectEncoder": [[3, 3, 1, "", "call"]], "armed.models.autoencoder_classifier.TiedConv2DTranspose": [[3, 3, 1, "", "build"]], "armed.models.cnn_classifier": [[3, 2, 1, "", "AdversarialClassifier"], [3, 2, 1, "", "ClusterInputImageClassifier"], [3, 2, 1, "", "DomainAdversarialImageClassifier"], [3, 2, 1, "", "ImageClassifier"], [3, 2, 1, "", "MixedEffectsClassifier"], [3, 2, 1, "", "RandomEffectsClassifier"]], "armed.models.cnn_classifier.AdversarialClassifier": [[3, 3, 1, "", "call"]], "armed.models.cnn_classifier.ClusterInputImageClassifier": [[3, 3, 1, "", "call"]], "armed.models.cnn_classifier.DomainAdversarialImageClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.cnn_classifier.ImageClassifier": [[3, 3, 1, "", "call"]], "armed.models.cnn_classifier.MixedEffectsClassifier": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.cnn_classifier.RandomEffectsClassifier": [[3, 3, 1, "", "call"]], "armed.models.lme": [[3, 2, 1, "", "LogisticGLM"], [3, 2, 1, "", "MixedLogisticGLM"]], "armed.models.lme.LogisticGLM": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "predict"]], "armed.models.lme.MixedLogisticGLM": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "predict"]], "armed.models.metalearning": [[3, 1, 1, "", "mldg"]], "armed.models.mlp_classifiers": [[3, 2, 1, "", "Adversary"], [3, 2, 1, "", "BaseMLP"], [3, 2, 1, "", "ClusterCovariateMLP"], [3, 2, 1, "", "DomainAdversarialMLP"], [3, 2, 1, "", "MLPActivations"], [3, 2, 1, "", "MixedEffectsMLP"], [3, 2, 1, "", "MixedEffectsMLPNonlinearSlope"], [3, 2, 1, "", "RandomEffectsLinearSlopeIntercept"]], "armed.models.mlp_classifiers.Adversary": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.mlp_classifiers.BaseMLP": [[3, 3, 1, "", "call"]], "armed.models.mlp_classifiers.ClusterCovariateMLP": [[3, 3, 1, "", "call"]], "armed.models.mlp_classifiers.DomainAdversarialMLP": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.mlp_classifiers.MLPActivations": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.mlp_classifiers.MixedEffectsMLP": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compile"], [3, 4, 1, "", "metrics"], [3, 3, 1, "", "test_step"], [3, 3, 1, "", "train_step"]], "armed.models.mlp_classifiers.MixedEffectsMLPNonlinearSlope": [[3, 3, 1, "", "call"]], "armed.models.mlp_classifiers.RandomEffectsLinearSlopeIntercept": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.random_effects": [[3, 2, 1, "", "ClusterScaleBiasBlock"], [3, 2, 1, "", "GammaRandomEffects"], [3, 2, 1, "", "NamedVariableLayer"], [3, 2, 1, "", "RandomEffects"], [3, 1, 1, "", "make_deterministic_posterior_fn"], [3, 1, 1, "", "make_fixed_prior_fn"], [3, 1, 1, "", "make_gamma_prior_fn"], [3, 1, 1, "", "make_posterior_fn"], [3, 1, 1, "", "make_trainable_prior_fn"]], "armed.models.random_effects.ClusterScaleBiasBlock": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.random_effects.GammaRandomEffects": [[3, 3, 1, "", "call"], [3, 3, 1, "", "get_config"]], "armed.models.random_effects.NamedVariableLayer": [[3, 3, 1, "", "get_config"]], "armed.models.random_effects.RandomEffects": [[3, 3, 1, "", "call"]], "armed.tfutils": [[0, 1, 1, "", "set_gpu"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"arm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26], "packag": [0, 1, 2, 3], "subpackag": 0, "submodul": [0, 1, 2, 3], "metric": [0, 12], "modul": [0, 1, 2, 3], "misc": [0, 13], "set": [0, 21], "tfutil": [0, 22], "content": [0, 1, 2, 3, 26], "callback": [1, 6, 7, 8], "aec_callback": [1, 7], "segment": [1, 8], "crossvalid": [2, 9, 10, 11], "grouped_cv": [2, 10], "split": [2, 11], "model": [3, 14, 15, 16, 17, 18, 19, 20, 23, 28, 29], "autoencoder_classifi": [3, 15], "cnn_classifi": [3, 16], "lme": [3, 17], "metalearn": [3, 18], "mlp_classifi": [3, 19], "random_effect": [3, 20], "alzheim": 23, "": 23, "diseas": 23, "diagnosi": 23, "from": 23, "t1": 23, "weight": 23, "mri": 23, "data": [23, 28, 29], "preprocess": 23, "detail": [23, 29], "convent": [23, 29], "cnn": [23, 29], "cluster": [23, 29], "input": 23, "domain": [23, 29], "adversari": [23, 26, 29], "mix": [23, 26, 29], "effect": [23, 26, 29], "api": 24, "refer": 24, "applic": 25, "regular": 26, "deep": [26, 28], "learn": [26, 28], "indic": 26, "licens": 27, "classif": [28, 29, 31], "stabl": 28, "v": 28, "progress": 28, "mild": 28, "cognit": 28, "impair": 28, "mci": 28, "1": 28, "partit": 28, "nest": 28, "k": 28, "fold": 28, "2": 28, "univari": 28, "analys": 28, "3": 28, "live": 29, "cell": 29, "imag": 29, "compress": 29, "prepar": 29, "train": 29, "util": 29, "infer": 29, "membership": 29, "design": 29, "matrix": 29, "unseen": 29, "batch": 29, "aec": 29, "setup": [30, 31], "depend": 30, "run": 30, "provid": 30, "exampl": 30, "synthet": 31, "dataset": 31, "spiral": 31}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"armed package": [[0, "armed-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"]], "armed.metrics module": [[0, "module-armed.metrics"]], "armed.misc module": [[0, "module-armed.misc"]], "armed.settings module": [[0, "module-armed.settings"]], "armed.tfutils module": [[0, "module-armed.tfutils"]], "Module contents": [[0, "module-armed"], [1, "module-armed.callbacks"], [2, "module-armed.crossvalidation"], [3, "module-armed.models"]], "armed.callbacks package": [[1, "armed-callbacks-package"]], "armed.callbacks.aec_callbacks module": [[1, "module-armed.callbacks.aec_callbacks"]], "armed.callbacks.segmentation module": [[1, "module-armed.callbacks.segmentation"]], "armed.crossvalidation package": [[2, "armed-crossvalidation-package"]], "armed.crossvalidation.grouped_cv module": [[2, "module-armed.crossvalidation.grouped_cv"]], "armed.crossvalidation.splitting module": [[2, "module-armed.crossvalidation.splitting"]], "armed.models package": [[3, "armed-models-package"]], "armed.models.autoencoder_classifier module": [[3, "module-armed.models.autoencoder_classifier"]], "armed.models.cnn_classifier module": [[3, "module-armed.models.cnn_classifier"]], "armed.models.lme module": [[3, "module-armed.models.lme"]], "armed.models.metalearning module": [[3, "module-armed.models.metalearning"]], "armed.models.mlp_classifiers module": [[3, "module-armed.models.mlp_classifiers"]], "armed.models.random_effects module": [[3, "module-armed.models.random_effects"]], "armed": [[4, "armed"], [5, "module-armed"]], "armed.callbacks": [[6, "module-armed.callbacks"]], "armed.callbacks.aec_callbacks": [[7, "module-armed.callbacks.aec_callbacks"]], "armed.callbacks.segmentation": [[8, "module-armed.callbacks.segmentation"]], "armed.crossvalidation": [[9, "module-armed.crossvalidation"]], "armed.crossvalidation.grouped_cv": [[10, "module-armed.crossvalidation.grouped_cv"]], "armed.crossvalidation.splitting": [[11, "module-armed.crossvalidation.splitting"]], "armed.metrics": [[12, "module-armed.metrics"]], "armed.misc": [[13, "module-armed.misc"]], "armed.models": [[14, "module-armed.models"]], "armed.models.autoencoder_classifier": [[15, "module-armed.models.autoencoder_classifier"]], "armed.models.cnn_classifier": [[16, "module-armed.models.cnn_classifier"]], "armed.models.lme": [[17, "module-armed.models.lme"]], "armed.models.metalearning": [[18, "module-armed.models.metalearning"]], "armed.models.mlp_classifiers": [[19, "module-armed.models.mlp_classifiers"]], "armed.models.random_effects": [[20, "module-armed.models.random_effects"]], "armed.settings": [[21, "module-armed.settings"]], "armed.tfutils": [[22, "module-armed.tfutils"]], "Alzheimer\u2019s Disease diagnosis from T1-weighted MRI": [[23, "alzheimer-s-disease-diagnosis-from-t1-weighted-mri"]], "Data preprocessing": [[23, "data-preprocessing"]], "Models": [[23, "models"]], "Model details": [[23, "model-details"], [29, "model-details"]], "Conventional CNN": [[23, "conventional-cnn"]], "Cluster input CNN": [[23, "cluster-input-cnn"]], "Domain adversarial CNN": [[23, "domain-adversarial-cnn"], [29, "domain-adversarial-cnn"]], "Mixed effects CNN": [[23, "mixed-effects-cnn"]], "API Reference": [[24, "api-reference"]], "Applications": [[25, "applications"]], "Adversarially-regularized mixed effects deep learning (ARMED)": [[26, "adversarially-regularized-mixed-effects-deep-learning-armed"]], "Contents:": [[26, null]], "Indices": [[26, "indices"]], "License": [[27, "license"]], "Classification of stable vs. progressive mild cognitive impairment (MCI)": [[28, "classification-of-stable-vs-progressive-mild-cognitive-impairment-mci"]], "1. Partition data into nested k-folds": [[28, "partition-data-into-nested-k-folds"]], "2. Univariate analyses": [[28, "univariate-analyses"]], "3. Deep learning models": [[28, "deep-learning-models"]], "Live cell image compression and classification": [[29, "live-cell-image-compression-and-classification"]], "Data preparation": [[29, "data-preparation"]], "Model training": [[29, "model-training"]], "Utilities": [[29, "utilities"]], "Inferring the cluster membership design matrix for unseen batches": [[29, "inferring-the-cluster-membership-design-matrix-for-unseen-batches"]], "Conventional AEC": [[29, "conventional-aec"]], "Mixed effects AEC": [[29, "mixed-effects-aec"]], "Setup": [[30, "setup"], [31, "setup"]], "Dependencies": [[30, "dependencies"]], "Running the provided examples": [[30, "running-the-provided-examples"]], "Synthetic datasets": [[31, "synthetic-datasets"]], "Spiral classification": [[31, "spiral-classification"]]}, "indexentries": {"armed": [[0, "module-armed"], [5, "module-armed"]], "armed.metrics": [[0, "module-armed.metrics"], [12, "module-armed.metrics"]], "armed.misc": [[0, "module-armed.misc"], [13, "module-armed.misc"]], "armed.settings": [[0, "module-armed.settings"], [21, "module-armed.settings"]], "armed.tfutils": [[0, "module-armed.tfutils"], [22, "module-armed.tfutils"]], "balanced_accuracy() (in module armed.metrics)": [[0, "armed.metrics.balanced_accuracy"]], "classification_metrics() (in module armed.metrics)": [[0, "armed.metrics.classification_metrics"]], "compute_youden_point() (in module armed.metrics)": [[0, "armed.metrics.compute_youden_point"]], "expand_data_path() (in module armed.misc)": [[0, "armed.misc.expand_data_path"]], "expand_results_path() (in module armed.misc)": [[0, "armed.misc.expand_results_path"]], "get_datestamp() (in module armed.misc)": [[0, "armed.misc.get_datestamp"]], "image_metrics() (in module armed.metrics)": [[0, "armed.metrics.image_metrics"]], "make_random_onehot() (in module armed.misc)": [[0, "armed.misc.make_random_onehot"]], "module": [[0, "module-armed"], [0, "module-armed.metrics"], [0, "module-armed.misc"], [0, "module-armed.settings"], [0, "module-armed.tfutils"], [1, "module-armed.callbacks"], [1, "module-armed.callbacks.aec_callbacks"], [1, "module-armed.callbacks.segmentation"], [2, "module-armed.crossvalidation"], [2, "module-armed.crossvalidation.grouped_cv"], [2, "module-armed.crossvalidation.splitting"], [3, "module-armed.models"], [3, "module-armed.models.autoencoder_classifier"], [3, "module-armed.models.cnn_classifier"], [3, "module-armed.models.lme"], [3, "module-armed.models.metalearning"], [3, "module-armed.models.mlp_classifiers"], [3, "module-armed.models.random_effects"], [5, "module-armed"], [6, "module-armed.callbacks"], [7, "module-armed.callbacks.aec_callbacks"], [8, "module-armed.callbacks.segmentation"], [9, "module-armed.crossvalidation"], [10, "module-armed.crossvalidation.grouped_cv"], [11, "module-armed.crossvalidation.splitting"], [12, "module-armed.metrics"], [13, "module-armed.misc"], [14, "module-armed.models"], [15, "module-armed.models.autoencoder_classifier"], [16, "module-armed.models.cnn_classifier"], [17, "module-armed.models.lme"], [18, "module-armed.models.metalearning"], [19, "module-armed.models.mlp_classifiers"], [20, "module-armed.models.random_effects"], [21, "module-armed.settings"], [22, "module-armed.tfutils"]], "sensitivity_at_specificity() (in module armed.metrics)": [[0, "armed.metrics.sensitivity_at_specificity"]], "set_gpu() (in module armed.tfutils)": [[0, "armed.tfutils.set_gpu"]], "single_sample_dice() (in module armed.metrics)": [[0, "armed.metrics.single_sample_dice"]], "specificity_at_sensitivity() (in module armed.metrics)": [[0, "armed.metrics.specificity_at_sensitivity"]], "saveimagescallback (class in armed.callbacks.segmentation)": [[1, "armed.callbacks.segmentation.SaveImagesCallback"]], "savemultimodalimagescallback (class in armed.callbacks.segmentation)": [[1, "armed.callbacks.segmentation.SaveMultiModalImagesCallback"]], "armed.callbacks": [[1, "module-armed.callbacks"], [6, "module-armed.callbacks"]], "armed.callbacks.aec_callbacks": [[1, "module-armed.callbacks.aec_callbacks"], [7, "module-armed.callbacks.aec_callbacks"]], "armed.callbacks.segmentation": [[1, "module-armed.callbacks.segmentation"], [8, "module-armed.callbacks.segmentation"]], "compute_image_metrics() (in module armed.callbacks.aec_callbacks)": [[1, "armed.callbacks.aec_callbacks.compute_image_metrics"]], "make_compute_latents_callback() (in module armed.callbacks.aec_callbacks)": [[1, "armed.callbacks.aec_callbacks.make_compute_latents_callback"]], "make_image_metrics_callback() (in module armed.callbacks.aec_callbacks)": [[1, "armed.callbacks.aec_callbacks.make_image_metrics_callback"]], "make_recon_figure_callback() (in module armed.callbacks.aec_callbacks)": [[1, "armed.callbacks.aec_callbacks.make_recon_figure_callback"]], "on_epoch_end() (armed.callbacks.segmentation.saveimagescallback method)": [[1, "armed.callbacks.segmentation.SaveImagesCallback.on_epoch_end"]], "on_epoch_end() (armed.callbacks.segmentation.savemultimodalimagescallback method)": [[1, "armed.callbacks.segmentation.SaveMultiModalImagesCallback.on_epoch_end"]], "basickfoldutil (class in armed.crossvalidation.splitting)": [[2, "armed.crossvalidation.splitting.BasicKFoldUtil"]], "nestedkfoldutil (class in armed.crossvalidation.splitting)": [[2, "armed.crossvalidation.splitting.NestedKFoldUtil"]], "stratifiedgroupkfold (class in armed.crossvalidation.grouped_cv)": [[2, "armed.crossvalidation.grouped_cv.StratifiedGroupKFold"]], "stratifiedgroupshufflesplit (class in armed.crossvalidation.grouped_cv)": [[2, "armed.crossvalidation.grouped_cv.StratifiedGroupShuffleSplit"]], "armed.crossvalidation": [[2, "module-armed.crossvalidation"], [9, "module-armed.crossvalidation"]], "armed.crossvalidation.grouped_cv": [[2, "module-armed.crossvalidation.grouped_cv"], [10, "module-armed.crossvalidation.grouped_cv"]], "armed.crossvalidation.splitting": [[2, "module-armed.crossvalidation.splitting"], [11, "module-armed.crossvalidation.splitting"]], "create_folds() (armed.crossvalidation.splitting.basickfoldutil method)": [[2, "armed.crossvalidation.splitting.BasicKFoldUtil.create_folds"]], "create_folds() (armed.crossvalidation.splitting.nestedkfoldutil method)": [[2, "armed.crossvalidation.splitting.NestedKFoldUtil.create_folds"]], "get_fold() (armed.crossvalidation.splitting.basickfoldutil method)": [[2, "armed.crossvalidation.splitting.BasicKFoldUtil.get_fold"]], "get_fold() (armed.crossvalidation.splitting.nestedkfoldutil method)": [[2, "armed.crossvalidation.splitting.NestedKFoldUtil.get_fold"]], "split() (armed.crossvalidation.grouped_cv.stratifiedgroupshufflesplit method)": [[2, "armed.crossvalidation.grouped_cv.StratifiedGroupShuffleSplit.split"]], "adversarialclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.AdversarialClassifier"]], "adversarialclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.AdversarialClassifier"]], "adversary (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.Adversary"]], "auxclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.AuxClassifier"]], "baseautoencoderclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.BaseAutoencoderClassifier"]], "basemlp (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.BaseMLP"]], "clustercovariatemlp (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.ClusterCovariateMLP"]], "clusterinputimageclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.ClusterInputImageClassifier"]], "clusterscalebiasblock (class in armed.models.random_effects)": [[3, "armed.models.random_effects.ClusterScaleBiasBlock"]], "decoder (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.Decoder"]], "domainadversarialaec (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC"]], "domainadversarialimageclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier"]], "domainadversarialmlp (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP"]], "domainenhancingautoencoderclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier"]], "encoder (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.Encoder"]], "gammarandomeffects (class in armed.models.random_effects)": [[3, "armed.models.random_effects.GammaRandomEffects"]], "imageclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.ImageClassifier"]], "imageclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.ImageClassifier"]], "latentclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.LatentClassifier"]], "logisticglm (class in armed.models.lme)": [[3, "armed.models.lme.LogisticGLM"]], "mlpactivations (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.MLPActivations"]], "mixedeffectauxclassifier (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.MixedEffectAuxClassifier"]], "mixedeffectsaec (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC"]], "mixedeffectsclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier"]], "mixedeffectsmlp (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP"]], "mixedeffectsmlpnonlinearslope (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLPNonlinearSlope"]], "mixedlogisticglm (class in armed.models.lme)": [[3, "armed.models.lme.MixedLogisticGLM"]], "namedvariablelayer (class in armed.models.random_effects)": [[3, "armed.models.random_effects.NamedVariableLayer"]], "randomeffectdecoder (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.RandomEffectDecoder"]], "randomeffectencoder (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.RandomEffectEncoder"]], "randomeffects (class in armed.models.random_effects)": [[3, "armed.models.random_effects.RandomEffects"]], "randomeffectsclassifier (class in armed.models.cnn_classifier)": [[3, "armed.models.cnn_classifier.RandomEffectsClassifier"]], "randomeffectslinearslopeintercept (class in armed.models.mlp_classifiers)": [[3, "armed.models.mlp_classifiers.RandomEffectsLinearSlopeIntercept"]], "tiedconv2dtranspose (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.TiedConv2DTranspose"]], "tieddecoder (class in armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.TiedDecoder"]], "armed.models": [[3, "module-armed.models"], [14, "module-armed.models"]], "armed.models.autoencoder_classifier": [[3, "module-armed.models.autoencoder_classifier"], [15, "module-armed.models.autoencoder_classifier"]], "armed.models.cnn_classifier": [[3, "module-armed.models.cnn_classifier"], [16, "module-armed.models.cnn_classifier"]], "armed.models.lme": [[3, "module-armed.models.lme"], [17, "module-armed.models.lme"]], "armed.models.metalearning": [[3, "module-armed.models.metalearning"], [18, "module-armed.models.metalearning"]], "armed.models.mlp_classifiers": [[3, "module-armed.models.mlp_classifiers"], [19, "module-armed.models.mlp_classifiers"]], "armed.models.random_effects": [[3, "module-armed.models.random_effects"], [20, "module-armed.models.random_effects"]], "build() (armed.models.autoencoder_classifier.tiedconv2dtranspose method)": [[3, "armed.models.autoencoder_classifier.TiedConv2DTranspose.build"]], "call() (armed.models.autoencoder_classifier.adversarialclassifier method)": [[3, "armed.models.autoencoder_classifier.AdversarialClassifier.call"]], "call() (armed.models.autoencoder_classifier.auxclassifier method)": [[3, "armed.models.autoencoder_classifier.AuxClassifier.call"]], "call() (armed.models.autoencoder_classifier.baseautoencoderclassifier method)": [[3, "armed.models.autoencoder_classifier.BaseAutoencoderClassifier.call"]], "call() (armed.models.autoencoder_classifier.decoder method)": [[3, "armed.models.autoencoder_classifier.Decoder.call"]], "call() (armed.models.autoencoder_classifier.domainadversarialaec method)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC.call"]], "call() (armed.models.autoencoder_classifier.domainenhancingautoencoderclassifier method)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier.call"]], "call() (armed.models.autoencoder_classifier.encoder method)": [[3, "armed.models.autoencoder_classifier.Encoder.call"]], "call() (armed.models.autoencoder_classifier.imageclassifier method)": [[3, "armed.models.autoencoder_classifier.ImageClassifier.call"]], "call() (armed.models.autoencoder_classifier.latentclassifier method)": [[3, "armed.models.autoencoder_classifier.LatentClassifier.call"]], "call() (armed.models.autoencoder_classifier.mixedeffectauxclassifier method)": [[3, "armed.models.autoencoder_classifier.MixedEffectAuxClassifier.call"]], "call() (armed.models.autoencoder_classifier.mixedeffectsaec method)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC.call"]], "call() (armed.models.autoencoder_classifier.randomeffectdecoder method)": [[3, "armed.models.autoencoder_classifier.RandomEffectDecoder.call"]], "call() (armed.models.autoencoder_classifier.randomeffectencoder method)": [[3, "armed.models.autoencoder_classifier.RandomEffectEncoder.call"]], "call() (armed.models.cnn_classifier.adversarialclassifier method)": [[3, "armed.models.cnn_classifier.AdversarialClassifier.call"]], "call() (armed.models.cnn_classifier.clusterinputimageclassifier method)": [[3, "armed.models.cnn_classifier.ClusterInputImageClassifier.call"]], "call() (armed.models.cnn_classifier.domainadversarialimageclassifier method)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier.call"]], "call() (armed.models.cnn_classifier.imageclassifier method)": [[3, "armed.models.cnn_classifier.ImageClassifier.call"]], "call() (armed.models.cnn_classifier.mixedeffectsclassifier method)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier.call"]], "call() (armed.models.cnn_classifier.randomeffectsclassifier method)": [[3, "armed.models.cnn_classifier.RandomEffectsClassifier.call"]], "call() (armed.models.mlp_classifiers.adversary method)": [[3, "armed.models.mlp_classifiers.Adversary.call"]], "call() (armed.models.mlp_classifiers.basemlp method)": [[3, "armed.models.mlp_classifiers.BaseMLP.call"]], "call() (armed.models.mlp_classifiers.clustercovariatemlp method)": [[3, "armed.models.mlp_classifiers.ClusterCovariateMLP.call"]], "call() (armed.models.mlp_classifiers.domainadversarialmlp method)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP.call"]], "call() (armed.models.mlp_classifiers.mlpactivations method)": [[3, "armed.models.mlp_classifiers.MLPActivations.call"]], "call() (armed.models.mlp_classifiers.mixedeffectsmlp method)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP.call"]], "call() (armed.models.mlp_classifiers.mixedeffectsmlpnonlinearslope method)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLPNonlinearSlope.call"]], "call() (armed.models.mlp_classifiers.randomeffectslinearslopeintercept method)": [[3, "armed.models.mlp_classifiers.RandomEffectsLinearSlopeIntercept.call"]], "call() (armed.models.random_effects.clusterscalebiasblock method)": [[3, "armed.models.random_effects.ClusterScaleBiasBlock.call"]], "call() (armed.models.random_effects.gammarandomeffects method)": [[3, "armed.models.random_effects.GammaRandomEffects.call"]], "call() (armed.models.random_effects.randomeffects method)": [[3, "armed.models.random_effects.RandomEffects.call"]], "compile() (armed.models.autoencoder_classifier.domainadversarialaec method)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC.compile"]], "compile() (armed.models.autoencoder_classifier.domainenhancingautoencoderclassifier method)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier.compile"]], "compile() (armed.models.autoencoder_classifier.mixedeffectsaec method)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC.compile"]], "compile() (armed.models.cnn_classifier.domainadversarialimageclassifier method)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier.compile"]], "compile() (armed.models.cnn_classifier.mixedeffectsclassifier method)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier.compile"]], "compile() (armed.models.mlp_classifiers.domainadversarialmlp method)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP.compile"]], "compile() (armed.models.mlp_classifiers.mixedeffectsmlp method)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP.compile"]], "fit() (armed.models.lme.logisticglm method)": [[3, "armed.models.lme.LogisticGLM.fit"]], "fit() (armed.models.lme.mixedlogisticglm method)": [[3, "armed.models.lme.MixedLogisticGLM.fit"]], "get_config() (armed.models.autoencoder_classifier.adversarialclassifier method)": [[3, "armed.models.autoencoder_classifier.AdversarialClassifier.get_config"]], "get_config() (armed.models.autoencoder_classifier.auxclassifier method)": [[3, "armed.models.autoencoder_classifier.AuxClassifier.get_config"]], "get_config() (armed.models.autoencoder_classifier.decoder method)": [[3, "armed.models.autoencoder_classifier.Decoder.get_config"]], "get_config() (armed.models.autoencoder_classifier.encoder method)": [[3, "armed.models.autoencoder_classifier.Encoder.get_config"]], "get_config() (armed.models.autoencoder_classifier.imageclassifier method)": [[3, "armed.models.autoencoder_classifier.ImageClassifier.get_config"]], "get_config() (armed.models.autoencoder_classifier.latentclassifier method)": [[3, "armed.models.autoencoder_classifier.LatentClassifier.get_config"]], "get_config() (armed.models.autoencoder_classifier.mixedeffectauxclassifier method)": [[3, "armed.models.autoencoder_classifier.MixedEffectAuxClassifier.get_config"]], "get_config() (armed.models.mlp_classifiers.adversary method)": [[3, "armed.models.mlp_classifiers.Adversary.get_config"]], "get_config() (armed.models.mlp_classifiers.mlpactivations method)": [[3, "armed.models.mlp_classifiers.MLPActivations.get_config"]], "get_config() (armed.models.mlp_classifiers.randomeffectslinearslopeintercept method)": [[3, "armed.models.mlp_classifiers.RandomEffectsLinearSlopeIntercept.get_config"]], "get_config() (armed.models.random_effects.clusterscalebiasblock method)": [[3, "armed.models.random_effects.ClusterScaleBiasBlock.get_config"]], "get_config() (armed.models.random_effects.gammarandomeffects method)": [[3, "armed.models.random_effects.GammaRandomEffects.get_config"]], "get_config() (armed.models.random_effects.namedvariablelayer method)": [[3, "armed.models.random_effects.NamedVariableLayer.get_config"]], "load_weights_base_aec() (in module armed.models.autoencoder_classifier)": [[3, "armed.models.autoencoder_classifier.load_weights_base_aec"]], "make_deterministic_posterior_fn() (in module armed.models.random_effects)": [[3, "armed.models.random_effects.make_deterministic_posterior_fn"]], "make_fixed_prior_fn() (in module armed.models.random_effects)": [[3, "armed.models.random_effects.make_fixed_prior_fn"]], "make_gamma_prior_fn() (in module armed.models.random_effects)": [[3, "armed.models.random_effects.make_gamma_prior_fn"]], "make_posterior_fn() (in module armed.models.random_effects)": [[3, "armed.models.random_effects.make_posterior_fn"]], "make_trainable_prior_fn() (in module armed.models.random_effects)": [[3, "armed.models.random_effects.make_trainable_prior_fn"]], "metrics (armed.models.autoencoder_classifier.domainadversarialaec property)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC.metrics"]], "metrics (armed.models.autoencoder_classifier.domainenhancingautoencoderclassifier property)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier.metrics"]], "metrics (armed.models.autoencoder_classifier.mixedeffectsaec property)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC.metrics"]], "metrics (armed.models.cnn_classifier.domainadversarialimageclassifier property)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier.metrics"]], "metrics (armed.models.cnn_classifier.mixedeffectsclassifier property)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier.metrics"]], "metrics (armed.models.mlp_classifiers.domainadversarialmlp property)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP.metrics"]], "metrics (armed.models.mlp_classifiers.mixedeffectsmlp property)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP.metrics"]], "mldg() (in module armed.models.metalearning)": [[3, "armed.models.metalearning.mldg"]], "predict() (armed.models.lme.logisticglm method)": [[3, "armed.models.lme.LogisticGLM.predict"]], "predict() (armed.models.lme.mixedlogisticglm method)": [[3, "armed.models.lme.MixedLogisticGLM.predict"]], "test_step() (armed.models.autoencoder_classifier.domainadversarialaec method)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC.test_step"]], "test_step() (armed.models.autoencoder_classifier.domainenhancingautoencoderclassifier method)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier.test_step"]], "test_step() (armed.models.autoencoder_classifier.mixedeffectsaec method)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC.test_step"]], "test_step() (armed.models.cnn_classifier.domainadversarialimageclassifier method)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier.test_step"]], "test_step() (armed.models.cnn_classifier.mixedeffectsclassifier method)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier.test_step"]], "test_step() (armed.models.mlp_classifiers.domainadversarialmlp method)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP.test_step"]], "test_step() (armed.models.mlp_classifiers.mixedeffectsmlp method)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP.test_step"]], "train_step() (armed.models.autoencoder_classifier.domainadversarialaec method)": [[3, "armed.models.autoencoder_classifier.DomainAdversarialAEC.train_step"]], "train_step() (armed.models.autoencoder_classifier.domainenhancingautoencoderclassifier method)": [[3, "armed.models.autoencoder_classifier.DomainEnhancingAutoencoderClassifier.train_step"]], "train_step() (armed.models.autoencoder_classifier.mixedeffectsaec method)": [[3, "armed.models.autoencoder_classifier.MixedEffectsAEC.train_step"]], "train_step() (armed.models.cnn_classifier.domainadversarialimageclassifier method)": [[3, "armed.models.cnn_classifier.DomainAdversarialImageClassifier.train_step"]], "train_step() (armed.models.cnn_classifier.mixedeffectsclassifier method)": [[3, "armed.models.cnn_classifier.MixedEffectsClassifier.train_step"]], "train_step() (armed.models.mlp_classifiers.domainadversarialmlp method)": [[3, "armed.models.mlp_classifiers.DomainAdversarialMLP.train_step"]], "train_step() (armed.models.mlp_classifiers.mixedeffectsmlp method)": [[3, "armed.models.mlp_classifiers.MixedEffectsMLP.train_step"]]}})